// https://chat.openai.com/c/b0518cba-c49f-4f37-a882-a0a53373e6ec
// databaseNodeJS.js

const databaseNodeJS = [
  {
    id: 1,
    pregunta: "¿Qué es Node.js?",
    opciones: ["Un entorno de ejecución de JavaScript", "Un framework de desarrollo web", "Un servidor de bases de datos", "Un sistema operativo"],
    respuestaCorrecta: "Un entorno de ejecución de JavaScript",
  },
  {
    id: 2,
    pregunta: "¿Quién creó Node.js?",
    opciones: ["Ryan Dahl", "Bill Gates", "Mark Zuckerberg", "Larry Page"],
    respuestaCorrecta: "Ryan Dahl",
  },
  {
    id: 3,
    pregunta: "¿Cuál es el gestor de paquetes de Node.js?",
    opciones: ["npm", "pip", "composer", "yarn"],
    respuestaCorrecta: "npm",
  },
  {
    id: 4,
    pregunta: "¿Para qué se utiliza el módulo 'fs' en Node.js?",
    opciones: ["Para manipular archivos", "Para enviar correos electrónicos", "Para realizar consultas a bases de datos", "Para crear interfaces de usuario"],
    respuestaCorrecta: "Para manipular archivos",
  },
  {
    id: 5,
    pregunta: "¿Qué es un callback en Node.js?",
    opciones: [
      "Una función que se pasa como argumento a otra función",
      "Una clase predefinida en Node.js",
      "Un tipo de error en Node.js",
      "Un módulo para realizar peticiones HTTP",
    ],
    respuestaCorrecta: "Una función que se pasa como argumento a otra función",
  },
  {
    id: 6,
    pregunta: "¿Cuál es el motor de JavaScript utilizado por Node.js?",
    opciones: ["V8", "SpiderMonkey", "Chakra", "JavaScriptCore"],
    respuestaCorrecta: "V8",
  },
  {
    id: 7,
    pregunta: "¿Cuál es el objetivo principal de Node.js?",
    opciones: ["Permitir la creación de aplicaciones web en el lado del servidor", "Crear aplicaciones móviles", "Desarrollar videojuegos", "Analizar grandes conjuntos de datos"],
    respuestaCorrecta: "Permitir la creación de aplicaciones web en el lado del servidor",
  },
  {
    id: 8,
    pregunta: "¿Qué es npm?",
    opciones: ["Node Package Manager", "Node Project Manager", "Node Plugin Manager", "Node Program Manager"],
    respuestaCorrecta: "Node Package Manager",
  },
  {
    id: 9,
    pregunta: "¿Cuál es el comando para instalar un paquete con npm?",
    opciones: ["npm install", "npm add", "npm get", "npm download"],
    respuestaCorrecta: "npm install",
  },
  {
    id: 10,
    pregunta: "¿Qué es Express en Node.js?",
    opciones: ["Un framework de desarrollo web", "Un sistema de gestión de bases de datos", "Un motor de plantillas", "Una biblioteca para realizar peticiones HTTP"],
    respuestaCorrecta: "Un framework de desarrollo web",
  },
  {
    id: 11,
    pregunta: "¿Qué es un módulo en Node.js?",
    opciones: [
      "Un archivo JavaScript que encapsula una funcionalidad específica",
      "Una carpeta que contiene múltiples archivos JavaScript",
      "Una función de alto nivel en JavaScript",
      "Una clase predefinida en Node.js",
    ],
    respuestaCorrecta: "Un archivo JavaScript que encapsula una funcionalidad específica",
  },
  {
    id: 12,
    pregunta: "¿Cuál es la utilidad del módulo 'http' en Node.js?",
    opciones: ["Para crear servidores HTTP", "Para manipular archivos", "Para conectarse a bases de datos", "Para renderizar vistas HTML"],
    respuestaCorrecta: "Para crear servidores HTTP",
  },
  {
    id: 13,
    pregunta: "¿Qué es el middleware en Express.js?",
    opciones: ["Funciones que se ejecutan antes de que lleguen a su ruta final", "Una base de datos relacional", "Una plantilla de vista", "Un motor de renderizado"],
    respuestaCorrecta: "Funciones que se ejecutan antes de que lleguen a su ruta final",
  },
  {
    id: 14,
    pregunta: "¿Qué método de HTTP se utiliza para enviar datos desde un formulario en una solicitud POST?",
    opciones: ["POST", "GET", "PUT", "DELETE"],
    respuestaCorrecta: "POST",
  },
  {
    id: 15,
    pregunta: "¿Qué es el objeto 'req' en Express.js?",
    opciones: ["El objeto de solicitud HTTP", "El objeto de respuesta HTTP", "El objeto de configuración del servidor", "El objeto de configuración de la aplicación"],
    respuestaCorrecta: "El objeto de solicitud HTTP",
  },
  {
    id: 16,
    pregunta: "¿Qué es el objeto 'res' en Express.js?",
    opciones: ["El objeto de respuesta HTTP", "El objeto de solicitud HTTP", "El objeto de configuración del servidor", "El objeto de configuración de la aplicación"],
    respuestaCorrecta: "El objeto de respuesta HTTP",
  },
  {
    id: 17,
    pregunta: "¿Qué es la programación asincrónica en Node.js?",
    opciones: [
      "Un estilo de programación que permite que múltiples tareas se ejecuten simultáneamente",
      "Un estilo de programación que ejecuta tareas en secuencia",
      "Un estilo de programación que utiliza solo funciones síncronas",
      "Un estilo de programación que no permite el uso de callbacks",
    ],
    respuestaCorrecta: "Un estilo de programación que permite que múltiples tareas se ejecuten simultáneamente",
  },
  {
    id: 18,
    pregunta: "¿Cuál es el objetivo del paquete 'nodemon' en Node.js?",
    opciones: [
      "Recargar automáticamente la aplicación cuando se detectan cambios en los archivos",
      "Optimizar el rendimiento de la aplicación",
      "Crear scripts de inicio para la aplicación",
      "Generar documentación para la aplicación",
    ],
    respuestaCorrecta: "Recargar automáticamente la aplicación cuando se detectan cambios en los archivos",
  },
  {
    id: 19,
    pregunta: "¿Qué es un EventEmitter en Node.js?",
    opciones: [
      "Un objeto que permite la emisión y escucha de eventos",
      "Una función para validar datos de entrada",
      "Un módulo para realizar peticiones HTTP",
      "Una clase para manejar errores",
    ],
    respuestaCorrecta: "Un objeto que permite la emisión y escucha de eventos",
  },
  {
    id: 20,
    pregunta: "¿Cuál es la diferencia entre 'require' y 'import' en Node.js?",
    opciones: [
      "'require' es la forma de importar módulos en versiones antiguas de Node.js, mientras que 'import' es la forma de importar módulos en versiones más recientes utilizando ECMAScript",
      "'require' se utiliza para importar módulos síncronamente, mientras que 'import' se utiliza para importar módulos asincrónicamente",
      "'require' es específico de Node.js, mientras que 'import' es una palabra clave de JavaScript estándar",
      "'require' se utiliza para importar módulos locales, mientras que 'import' se utiliza para importar módulos de terceros",
    ],
    respuestaCorrecta:
      "'require' es la forma de importar módulos en versiones antiguas de Node.js, mientras que 'import' es la forma de importar módulos en versiones más recientes utilizando ECMAScript",
  },
  {
    id: 21,
    pregunta: "¿Qué es el paquete 'npm'?",
    opciones: ["Node Package Manager", "Node Project Manager", "Node Plugin Manager", "Node Program Manager"],
    respuestaCorrecta: "Node Package Manager",
  },
  {
    id: 22,
    pregunta: "¿Qué comando se utiliza para inicializar un proyecto Node.js con npm?",
    opciones: ["npm init", "npm start", "npm install", "npm run"],
    respuestaCorrecta: "npm init",
  },
  {
    id: 23,
    pregunta: "¿Qué hace el comando 'npm install --save'?",
    opciones: [
      "Instala un paquete y lo añade como dependencia en el archivo package.json",
      "Instala un paquete sin añadirlo como dependencia en el archivo package.json",
      "Instala un paquete globalmente en el sistema",
      "Inicia un servidor Node.js",
    ],
    respuestaCorrecta: "Instala un paquete y lo añade como dependencia en el archivo package.json",
  },
  {
    id: 24,
    pregunta: "¿Cómo se puede actualizar un paquete npm instalado en un proyecto?",
    opciones: ["npm update nombre_del_paquete", "npm upgrade nombre_del_paquete", "npm install nombre_del_paquete", "npm reinstall nombre_del_paquete"],
    respuestaCorrecta: "npm update nombre_del_paquete",
  },
  {
    id: 25,
    pregunta: "¿Qué es un módulo nativo en Node.js?",
    opciones: [
      "Un módulo incorporado en Node.js que proporciona funcionalidades básicas del sistema",
      "Un módulo desarrollado por la comunidad y disponible a través de npm",
      "Un módulo que requiere ser instalado manualmente desde una fuente externa",
      "Un módulo que no es compatible con la versión actual de Node.js",
    ],
    respuestaCorrecta: "Un módulo incorporado en Node.js que proporciona funcionalidades básicas del sistema",
  },
  {
    id: 26,
    pregunta: "¿Cuál es la forma de manejar errores asincrónicos en Node.js?",
    opciones: ["Usando callbacks o promesas", "Usando try-catch", "Usando setInterval", "Usando async-await"],
    respuestaCorrecta: "Usando callbacks o promesas",
  },
  {
    id: 27,
    pregunta: "¿Qué es un paquete middleware en Express.js?",
    opciones: [
      "Un conjunto de funciones que se ejecutan antes de que se maneje una solicitud",
      "Una biblioteca para construir interfaces de usuario",
      "Un tipo de base de datos",
      "Un servicio de alojamiento web",
    ],
    respuestaCorrecta: "Un conjunto de funciones que se ejecutan antes de que se maneje una solicitud",
  },
  {
    id: 28,
    pregunta: "¿Cuál es el propósito del método 'use' en Express.js?",
    opciones: ["Montar middleware en la aplicación", "Enviar una respuesta HTTP", "Definir una nueva ruta", "Crear una instancia de la aplicación"],
    respuestaCorrecta: "Montar middleware en la aplicación",
  },
  {
    id: 29,
    pregunta: "¿Cómo se define una ruta en Express.js?",
    opciones: ["Usando métodos de enrutamiento como get, post, put, delete", "Usando el método 'send'", "Usando el método 'use'", "Usando el método 'listen'"],
    respuestaCorrecta: "Usando métodos de enrutamiento como get, post, put, delete",
  },
  {
    id: 30,
    pregunta: "¿Qué es una promesa en JavaScript?",
    opciones: [
      "Un objeto que representa el resultado eventual de una operación asincrónica",
      "Una función que ejecuta tareas de manera síncrona",
      "Una clase para crear objetos",
      "Un patrón de diseño para encapsular datos y métodos",
    ],
    respuestaCorrecta: "Un objeto que representa el resultado eventual de una operación asincrónica",
  },
  {
    id: 31,
    pregunta: "¿Qué es la modularidad en Node.js?",
    opciones: [
      "La capacidad de dividir una aplicación en módulos independientes y reutilizables",
      "La capacidad de ejecutar múltiples hilos de ejecución simultáneamente",
      "La capacidad de realizar operaciones de entrada/salida de manera síncrona",
      "La capacidad de interpretar código JavaScript en el servidor",
    ],
    respuestaCorrecta: "La capacidad de dividir una aplicación en módulos independientes y reutilizables",
  },
  {
    id: 32,
    pregunta: "¿Qué es el evento 'data' en Node.js?",
    opciones: [
      "Un evento que se emite cuando hay datos disponibles para ser leídos desde un flujo de datos",
      "Un evento que se emite cuando se produce un error en una operación asincrónica",
      "Un evento que se emite cuando se inicia una conexión de red",
      "Un evento que se emite cuando se cierra una conexión de red",
    ],
    respuestaCorrecta: "Un evento que se emite cuando hay datos disponibles para ser leídos desde un flujo de datos",
  },
  {
    id: 33,
    pregunta: "¿Qué es el paquete 'body-parser' en Express.js?",
    opciones: [
      "Un middleware que analiza los cuerpos de las solicitudes entrantes en middleware de Express",
      "Un motor de plantillas para renderizar vistas HTML",
      "Un generador de números aleatorios",
      "Un módulo para interactuar con bases de datos",
    ],
    respuestaCorrecta: "Un middleware que analiza los cuerpos de las solicitudes entrantes en middleware de Express",
  },
  {
    id: 34,
    pregunta: "¿Qué es el enrutamiento en Express.js?",
    opciones: [
      "El proceso de asociar una acción con una URL específica",
      "El proceso de instalar y configurar Express en un servidor",
      "El proceso de empaquetar una aplicación Express como un paquete npm",
      "El proceso de codificación de vistas HTML en una aplicación Express",
    ],
    respuestaCorrecta: "El proceso de asociar una acción con una URL específica",
  },
  {
    id: 35,
    pregunta: "¿Qué es un controlador en Express.js?",
    opciones: [
      "Una función que maneja una solicitud HTTP en una ruta específica",
      "Una base de datos no relacional",
      "Un middleware que se ejecuta antes de que se maneje una solicitud",
      "Una biblioteca para realizar llamadas HTTP",
    ],
    respuestaCorrecta: "Una función que maneja una solicitud HTTP en una ruta específica",
  },
  {
    id: 36,
    pregunta: "¿Qué es la desestructuración en JavaScript?",
    opciones: [
      "Una forma de extraer datos de arrays u objetos en variables individuales",
      "Una forma de concatenar strings en JavaScript",
      "Una técnica para definir funciones anónimas",
      "Una característica para definir clases",
    ],
    respuestaCorrecta: "Una forma de extraer datos de arrays u objetos en variables individuales",
  },
  {
    id: 37,
    pregunta: "¿Qué es un objeto JSON?",
    opciones: [
      "Un formato de datos ligero basado en texto para intercambio de datos",
      "Un tipo de base de datos relacional",
      "Un tipo de servidor web",
      "Un lenguaje de programación",
    ],
    respuestaCorrecta: "Un formato de datos ligero basado en texto para intercambio de datos",
  },
  {
    id: 38,
    pregunta: "¿Cuál es la función del método 'json' en Express.js?",
    opciones: [
      "Enviar una respuesta JSON al cliente",
      "Analizar el cuerpo de una solicitud entrante como JSON",
      "Convertir un objeto JavaScript en una cadena JSON",
      "Configurar la aplicación para utilizar JSON como formato de datos",
    ],
    respuestaCorrecta: "Enviar una respuesta JSON al cliente",
  },
  {
    id: 39,
    pregunta: "¿Qué es la recursión en programación?",
    opciones: [
      "Un proceso en el que una función se llama a sí misma",
      "Un proceso para dividir una aplicación en módulos independientes",
      "Un proceso para definir múltiples rutas en Express.js",
      "Un proceso para manejar errores asincrónicos en Node.js",
    ],
    respuestaCorrecta: "Un proceso en el que una función se llama a sí misma",
  },
  {
    id: 40,
    pregunta: "¿Qué es un objeto 'Request' en Express.js?",
    opciones: [
      "Un objeto que representa la solicitud HTTP entrante",
      "Un objeto que representa la respuesta HTTP saliente",
      "Un objeto que almacena la configuración de la aplicación",
      "Un objeto que maneja la lógica del enrutamiento",
    ],
    respuestaCorrecta: "Un objeto que representa la solicitud HTTP entrante",
  },
  {
    id: 41,
    pregunta: "¿Qué es el middleware 'morgan' en Express.js?",
    opciones: [
      "Un middleware para registrar solicitudes HTTP en el servidor",
      "Un motor de plantillas para Express.js",
      "Un middleware para autenticación de usuarios",
      "Un módulo para interactuar con bases de datos",
    ],
    respuestaCorrecta: "Un middleware para registrar solicitudes HTTP en el servidor",
  },
  {
    id: 42,
    pregunta: "¿Qué es 'npm run-script'?",
    opciones: [
      "Un comando para ejecutar scripts definidos en el archivo package.json",
      "Un comando para iniciar un servidor Node.js",
      "Un comando para instalar paquetes npm globalmente",
      "Un comando para actualizar paquetes npm",
    ],
    respuestaCorrecta: "Un comando para ejecutar scripts definidos en el archivo package.json",
  },
  {
    id: 43,
    pregunta: "¿Qué es un 'stream' en Node.js?",
    opciones: [
      "Un flujo de datos que se procesa de manera incremental",
      "Una función asíncrona en Node.js",
      "Un tipo de base de datos no relacional",
      "Una plantilla de vistas en Express.js",
    ],
    respuestaCorrecta: "Un flujo de datos que se procesa de manera incremental",
  },
  {
    id: 44,
    pregunta: "¿Qué hace el método 'pipe' en Node.js?",
    opciones: [
      "Conecta la salida de un flujo a la entrada de otro",
      "Elimina elementos duplicados de un array",
      "Copia un archivo de un directorio a otro",
      "Analiza un objeto JSON",
    ],
    respuestaCorrecta: "Conecta la salida de un flujo a la entrada de otro",
  },
  {
    id: 45,
    pregunta: "¿Qué es 'npm audit'?",
    opciones: [
      "Un comando para buscar vulnerabilidades en los paquetes npm instalados",
      "Un comando para generar documentación de la aplicación",
      "Un comando para iniciar un servidor de desarrollo",
      "Un comando para instalar paquetes de auditoría",
    ],
    respuestaCorrecta: "Un comando para buscar vulnerabilidades en los paquetes npm instalados",
  },
  {
    id: 46,
    pregunta: "¿Cuál es el propósito del archivo 'package-lock.json'?",
    opciones: [
      "Registrar la versión exacta de las dependencias instaladas en un proyecto",
      "Almacenar configuraciones de la aplicación",
      "Mapear rutas de archivos en la aplicación",
      "Definir variables de entorno",
    ],
    respuestaCorrecta: "Registrar la versión exacta de las dependencias instaladas en un proyecto",
  },
  {
    id: 47,
    pregunta: "¿Qué es el patrón 'singleton' en JavaScript?",
    opciones: [
      "Un patrón de diseño que garantiza que una clase tenga una única instancia y proporciona un punto de acceso global a esa instancia",
      "Un patrón de diseño para organizar el código en módulos independientes y reutilizables",
      "Un patrón para manejar errores asincrónicos en Node.js",
      "Un patrón para validar datos de entrada",
    ],
    respuestaCorrecta: "Un patrón de diseño que garantiza que una clase tenga una única instancia y proporciona un punto de acceso global a esa instancia",
  },
  {
    id: 48,
    pregunta: "¿Qué es un 'worker thread' en Node.js?",
    opciones: [
      "Un hilo de ejecución adicional que permite realizar operaciones intensivas de CPU sin bloquear el evento loop",
      "Un tipo de base de datos no relacional",
      "Una función asíncrona que se ejecuta en segundo plano",
      "Un objeto que maneja eventos en el servidor",
    ],
    respuestaCorrecta: "Un hilo de ejecución adicional que permite realizar operaciones intensivas de CPU sin bloquear el evento loop",
  },
  {
    id: 49,
    pregunta: "¿Qué es el 'event loop' en Node.js?",
    opciones: [
      "Un mecanismo que permite que Node.js maneje múltiples solicitudes de manera no bloqueante",
      "Un bucle que procesa eventos de manera asíncrona",
      "Un módulo para generar números aleatorios",
      "Un objeto para manejar eventos en la interfaz de usuario",
    ],
    respuestaCorrecta: "Un bucle que procesa eventos de manera asíncrona",
  },
  {
    id: 50,
    pregunta: "¿Qué es un 'código asincrónico' en Node.js?",
    opciones: [
      "Código que se ejecuta de manera no secuencial, permitiendo que otras tareas continúen mientras se espera una respuesta",
      "Código que se ejecuta de manera síncrona y bloquea el hilo principal",
      "Código que no está relacionado con eventos",
      "Código que maneja excepciones de manera síncrona",
    ],
    respuestaCorrecta: "Código que se ejecuta de manera no secuencial, permitiendo que otras tareas continúen mientras se espera una respuesta",
  },
];

module.exports = databaseNodeJS;
